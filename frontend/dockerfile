###################
# BUILD PARA DESENVOLVIMENTO LOCAL
###################

# Usa uma imagem leve do Node.js como base
FROM node:22.14.0-alpine AS dev

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat

# Alterna para o usuário "node" por motivos de segurança
USER node

# Define o diretório de trabalho como /app
WORKDIR /app

# Copia os arquivos package.json e package-lock.json para o contêiner
COPY --chown=node:node package.json package-lock.json ./

RUN npm install

# Copia o restante do código da aplicação para o contêiner
COPY --chown=node:node . .

# Expõe a porta 3001
EXPOSE 3001

# Inicia o NextJS
CMD ["/bin/sh", "-c", "npm run dev"]


###################
# BUILD PARA PRODUÇÃO
###################

# Use uma imagem leve do Node.js como base
FROM node:22.14.0-alpine AS build

# Define o diretório de trabalho como /app
WORKDIR /app

# Instala o libc6-compat se necessário (para compatibilidade)
RUN apk add --no-cache libc6-compat

# Copia os arquivos package.json e package-lock.json para o contêiner
COPY package.json package-lock.json ./

# Instala todas as dependências
RUN npm install

# Copia o restante do código da aplicação para o contêiner
COPY . .
# This will do the trick, use the corresponding env file for each environment.
COPY .env .env.production

# Compila a aplicação
RUN npm run build

###################
# PRODUÇÃO
###################

# Cria um novo estágio de produção
FROM node:22.14.0-alpine AS prod

# Define o diretório de trabalho como /app
WORKDIR /app

# Define o ambiente de produção e as variáveis de ambiente necessárias
ENV NODE_ENV=production
ENV PORT=3001
# ENV HOST=0.0.0.0

# Copia as dependências de produção do estágio de build
COPY --from=build /app/node_modules ./node_modules

# Copia os arquivos necessários do estágio de build
COPY --from=build /app/.next ./.next
COPY --from=build /app/public ./public
COPY --from=build /app/next.config.mjs ./
COPY --from=build /app/package.json ./

# Expor a porta 3001
EXPOSE 3001

# Altera para o usuário "node" por segurança
USER node

# Inicia a aplicação
CMD ["npm", "start"]
